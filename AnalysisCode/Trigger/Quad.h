float nL1Pt1PtPt3Pt4(float x){
	return ((0.5+(0.5*TMath::Erf((((x-37.7622)*(((x-37.7622)>219.612)/131.734))+((x-37.7622)*(((x-37.7622)<219.612)/43.5059)))+(219.612*(((1/131.734)-(1/43.5059))*((x-37.7622)<219.612))))))*0.90796)+0.0927401 ; }

float nCaloPt4(float x){
	return ((0.5+(0.5*TMath::Erf((((x-50.965)*(((x-50.965)>-3022.65)/17.6008))+((x-50.965)*(((x-50.965)<-3022.65)/60.5034)))+(-3022.65*(((1/17.6008)-(1/60.5034))*((x-50.965)<-3022.65))))))*1)-2.50158e-11 ; }

float nCaloCSV3(float x){
	return ((0.5+(0.5*TMath::Erf((((x+0.447175)*(((x+0.447175)>1.67748)/2.65565))+((x+0.447175)*(((x+0.447175)<1.67748)/13.1007)))+(1.67748*(((1/2.65565)-(1/13.1007))*((x+0.447175)<1.67748))))))*3.54556)-2.76519 ; }

float nPFPt4(float x){
	return ((0.5+(0.5*TMath::Erf((((x-22.8449)*(((x-22.8449)>-3022.65)/26.7803))+((x-22.8449)*(((x-22.8449)<-3022.65)/60.5034)))+(-3022.65*(((1/26.7803)-(1/60.5034))*((x-22.8449)<-3022.65))))))*0.995817)-0.00477015 ; }

float nL1Pt1PtPt3Pt4Up(float x){
	return ((0.5+(0.5*TMath::Erf((((x-35.4523)*(((x-35.4523)>5)/130.031))+((x-35.4523)*(((x-35.4523)<5)/42.852)))+(5*(((1/130.031)-(1/42.852))*((x-35.4523)<5))))))*0.9)+0.0929409 ; }

float nCaloPt4Up(float x){
	return ((0.5+(0.5*TMath::Erf((((x-50.8254)*(((x-50.8254)>12)/17.4014))+((x-50.8254)*(((x-50.8254)<12)/58.4975)))+(12*(((1/17.4014)-(1/58.4975))*((x-50.8254)<12))))))*1)-7.10871e-12 ; }

float nCaloCSV3Up(float x){
	return ((0.5+(0.5*TMath::Erf((((x+0.482368)*(((x+0.482368)>12)/2.34539))+((x+0.482368)*(((x+0.482368)<12)/11.0524)))+(12*(((1/2.34539)-(1/11.0524))*((x+0.482368)<12))))))*1)-2.75727 ; }

float nPFPt4Up(float x){
	return ((0.5+(0.5*TMath::Erf((((x-16.2384)*(((x-16.2384)>-3022.65)/18.7501))+((x-16.2384)*(((x-16.2384)<-3022.65)/58.5034)))+(-3022.65*(((1/18.7501)-(1/58.5034))*((x-16.2384)<-3022.65))))))*1)+0.000766246 ; }

float nL1Pt1PtPt3Pt4Down(float x){
	return ((0.5+(0.5*TMath::Erf((((x-40.0721)*(((x-40.0721)>5)/133.436))+((x-40.0721)*(((x-40.0721)<5)/44.1598)))+(5*(((1/133.436)-(1/44.1598))*((x-40.0721)<5))))))*0.9)+0.0925393 ; }

float nCaloPt4Down(float x){
	return ((0.5+(0.5*TMath::Erf((((x-51.1046)*(((x-51.1046)>12)/17.8002))+((x-51.1046)*(((x-51.1046)<12)/62.5093)))+(12*(((1/17.8002)-(1/62.5093))*((x-51.1046)<12))))))*1)-4.2923e-11 ; }

float nCaloCSV3Down(float x){
	return ((0.5+(0.5*TMath::Erf((((x+0.411982)*(((x+0.411982)>12)/2.96591))+((x+0.411982)*(((x+0.411982)<12)/15.1489)))+(12*(((1/2.96591)-(1/15.1489))*((x+0.411982)<12))))))*1)-2.77312 ; }

float nPFPt4Down(float x){
	return ((0.5+(0.5*TMath::Erf((((x-29.4514)*(((x-29.4514)>-3022.65)/34.8106))+((x-29.4514)*(((x-29.4514)<-3022.65)/62.5034)))+(-3022.65*(((1/34.8106)-(1/62.5034))*((x-29.4514)<-3022.65))))))*1)-0.0103066 ; }

float QuadTriggerWeight(float pt1, float pt2, float pt3, float pt4 , float CSV3){
	if(isnan(CSV3)) CSV3=0;
	CSV3=CSV3>1?1:CSV3;CSV3=CSV3<0?0:CSV3;
	return nL1Pt1PtPt3Pt4(pt1+pt2+pt3+pt4)*nCaloPt4(pt4)*nPFPt4(pt4)*nCaloCSV3(-log(1-CSV3+1.e-7)) ; }

float QuadTriggerWeightUp(float pt1, float pt2, float pt3, float pt4 , float CSV3){
	if(isnan(CSV3)) CSV3=0;
	CSV3=CSV3>1?1:CSV3;CSV3=CSV3<0?0:CSV3;
	return nL1Pt1PtPt3Pt4Up(pt1+pt2+pt3+pt4)*nCaloPt4Up(pt4)*nPFPt4Up(pt4)*nCaloCSV3Up(-log(1-CSV3+1.e-7)) ; }

float QuadTriggerWeightDown(float pt1, float pt2, float pt3, float pt4 , float CSV3){
	if(isnan(CSV3)) CSV3=0;
	CSV3=CSV3>1?1:CSV3;CSV3=CSV3<0?0:CSV3;
	return nL1Pt1PtPt3Pt4Down(pt1+pt2+pt3+pt4)*nCaloPt4Down(pt4)*nPFPt4Down(pt4)*nCaloCSV3Down(-log(1-CSV3+1.e-7)) ; }

